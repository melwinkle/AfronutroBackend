# Generated by Django 5.1.1 on 2024-11-02 20:28

import django.contrib.postgres.fields
import django.utils.timezone
import recipes.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('favorite_id', models.CharField(default=recipes.models.generate_content_id, editable=False, max_length=8, primary_key=True, serialize=False)),
                ('added_on', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('ingredients_id', models.CharField(default=recipes.models.generate_content_id, editable=False, max_length=8, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('calories', models.FloatField()),
                ('carbs', models.FloatField()),
                ('protein', models.FloatField()),
                ('fat', models.FloatField()),
                ('minerals', models.JSONField()),
                ('vitamins', models.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name='NutritionalInformation',
            fields=[
                ('nutrition_info_id', models.CharField(default=recipes.models.generate_content_id, editable=False, max_length=8, primary_key=True, serialize=False)),
                ('calories', models.IntegerField(default=0.0)),
                ('protein', models.FloatField(default=0.0)),
                ('carbs', models.FloatField(default=0.0)),
                ('fat', models.FloatField(default=0.0)),
                ('fiber', models.FloatField(default=0.0)),
            ],
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('rating_id', models.CharField(default=recipes.models.generate_content_id, editable=False, max_length=8, primary_key=True, serialize=False)),
                ('rating', models.FloatField(default=0.0)),
                ('comment', models.TextField(blank=True)),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('recipe_id', models.CharField(default=recipes.models.generate_content_id, editable=False, max_length=8, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('ingredients', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), size=None)),
                ('cuisine', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(choices=[('ghanaian', 'Ghanaian'), ('nigerian', 'Nigeria'), ('west african', 'West African'), ('european', 'European'), ('american', 'American'), ('asian', 'Asian'), ('middle eastern', 'Middle Eastern'), ('indian', 'Indian'), ('chinese', 'Chinese'), ('japanese', 'Japanese'), ('korean', 'Korean'), ('thai', 'Thai'), ('vietnamese', 'Vietnamese'), ('italian', 'Italian'), ('mexican', 'Mexican'), ('spanish', 'Spanish'), ('french', 'French'), ('german', 'German'), ('british', 'British'), ('australian', 'Australian'), ('canadian', 'Canadian')], max_length=20), size=5)),
                ('recipe_info', models.TextField()),
                ('vegan', models.BooleanField(default=False)),
                ('vegetarian', models.BooleanField(default=False)),
                ('gluten_free', models.BooleanField(default=False)),
                ('pescatarian', models.BooleanField(default=False)),
                ('halal', models.BooleanField(default=False)),
                ('meal_type', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(choices=[('breakfast', 'Breakfast'), ('lunch', 'Lunch'), ('dinner', 'Dinner'), ('snack', 'Snack')], max_length=20), size=2)),
                ('dish_type', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(choices=[('main', 'Main'), ('side', 'Side'), ('protein', 'Protein'), ('vegetable', 'Vegetable'), ('carb', 'Carb'), ('dessert', 'Dessert'), ('appetizer', 'Appetizer'), ('soup', 'Soup'), ('salad', 'Salad'), ('sauce', 'Sauce'), ('drink', 'Drink'), ('one-pot', 'One-Pot')], max_length=20), size=3)),
                ('tags', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(choices=[('dairy-free', 'Dairy-Free'), ('keto', 'Keto'), ('paleo', 'Paleo'), ('high-protein', 'High-Protein'), ('low-protein', 'Low-Protein'), ('low-carb', 'Low-Carb'), ('nut-free', 'Nut_Free'), ('shellfish-free', 'Shellfish-Free'), ('lactose-free', 'Lactose-Free'), ('egg-free', 'Egg-Free'), ('peanut-free', 'Peanut-Free'), ('soy_free', 'Soy-Free'), ('low-sugar', 'Low-Sugar'), ('spicy', 'Spicy'), ('sweet', 'Sweet'), ('savory', 'Savory'), ('organic', 'Organic'), ('high-fiber', 'High-Fiber'), ('high-fat', 'High-Fat'), ('moderate-carbs', 'Moderate-Carbs'), ('low-fat', 'Low-Fat'), ('moderate-protein', 'Moderate-Protein'), ('balanced', 'Balanced')], max_length=50), size=5)),
                ('duration', models.IntegerField(default=10, null=True)),
                ('image', models.FileField(blank=True, null=True, upload_to=recipes.models.recipe_file_path)),
            ],
        ),
    ]
